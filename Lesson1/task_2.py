"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.

Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.

Не забудьте указать где какая сложность.

Примечание:
Построить список можно через списковое включение.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.
"""

def f_o_n2(list):
	result=0						#O(1)
	for i in range (len(list)):		#
		for i in range (len(list)):	# так как операция выполняется в дважды в любом случае сложность O(n^2)
			if list[i]<=result:		# O(1)
				result=list[i]		#O(1)

	return result					#O(1)
# Общая сложность O(n^2)



def f_o_n(list):
	result=list[0]				# O(1)
	for i in range (len(list)): # for i in range() - сложность O(n),   len(list) - O(1)
		if list[i]<=result:		# O(1)
			result=list[i]		# O(1)
	return result				# O(1)

	# Общая сложность за счет обхода спика O(n)
